@model SurveyApp.Models.Automation

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    function GetAutomationID() {
        const selectedID = $('select[name="ProcessNames"]').find('option:selected').val();
        $("#hfAutomationID").val(selectedID);

        document.forms[0].submit();
    }

    function GetRadioValue(event) {
        console.log('====', event);
    }

    function GetAutomationTypeID() {
        const selectedID = $('select[name="AutomationTypesVB"]').find('option:selected').val();
        $("#hfAutomationTypeID").val(selectedID);

        if (selectedID === "2") {
            const modelDialog = document.querySelector('.model-backdrop');
            modelDialog.style.setProperty('display', 'block');
        }
    }

    function CloseModel(event) {
        const modelDialog = document.querySelector('.model-backdrop');
        modelDialog.style.setProperty('display', 'none');
    }
</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2>Initiate Automation Job</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProcessName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProcessNames", null, "Select Process Name", new { @class = "form-control", onchange = "GetAutomationID()" })
                @Html.ValidationMessageFor(model => model.ProcessName, "", new { @class = "text-danger" })
                @Html.Hidden("SelectedAutomationID", null, new { @id = "hfAutomationID" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, 10, 40, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutomationType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AutomationTypesVB", null, "Select Automation Type", new { @class = "form-control", onchange = "GetAutomationTypeID()" })
                @Html.Hidden("SelectedAutomationTypeID", null, new { @id = "hfAutomationTypeID" })
            </div>
        </div>

        <div class="model-backdrop">
            <div class="model-content">
                <div class="btn-close" onclick="CloseModel()">X</div>
                <fieldset class="model-fieldset">
                    <legend class="model-legend">
                        Range of Recurrence
                    </legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>

                <fieldset class="model-fieldset">
                    <legend class="model-legend">
                        Recurrence Pattern
                    </legend>
                    <div class="form-group">
                        <div class="model-recurrence-pattern-radio">
                            <span><input type="radio" name="pattern" /> Daily</span>
                            <span><input type="radio" name="pattern" /> Weekly</span>
                            <span><input type="radio" name="pattern" /> Monthly</span>
                            <span><input type="radio" name="pattern" /> Yearly</span>
                        </div>
                        <div class="model-recurrence-pattern-weekdays">
                            <span><input type="checkbox" name="weekdays" /> Sunday</span>
                            <span><input type="checkbox" name="weekdays" /> Monday</span>
                            <span><input type="checkbox" name="weekdays" /> Tuesday</span>
                            <span><input type="checkbox" name="weekdays" /> Wednesday</span>
                            <span><input type="checkbox" name="weekdays" /> Thursday</span>
                            <span><input type="checkbox" name="weekdays" /> Friday</span>
                            <span><input type="checkbox" name="weekdays" /> Saturday</span>
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input name="Initiate" type="submit" value="Initiate Job" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Create New Job", "Create", null, new { @class = "btn btn-default" })
</div>
